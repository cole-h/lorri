name: CI
on:
  push:
    branches: [master]
  pull_request:
jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v7
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      # TODO: add CACHIX_SIGNING_KEY and uncomment
      # - name: Cachix
      #   uses: cachix/cachix-action@v6
      #   with:
      #     name: lorri-test
      #     signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
      - name: Shell (cache inputs)
        run: nix-shell
      - name: Format
        # if: runner.os != 'macOS' # sometimes, darwin doesn't have cargo-fmt
        run: |
          ./nix/fmt.sh
          nix-shell --run 'cargo fmt --all -- --check' --arg isDevelopmentShell false
      - name: Carnix
        run: ./nix/update-carnix.sh
      - name: Clippy
        # if: runner.os != 'macOS' # sometimes, darwin doesn't have cargo-clippy
        run: nix-shell --run 'cargo clippy --all-features' --arg isDevelopmentShell false
        env:
            RUSTFLAGS: "-D warnings"
      - name: Test
        run: |
          ./script-tests/run-all.sh
          nix-shell --run 'cargo test' --arg isDevelopmentShell false
      - name: Build
        run: nix-shell --run 'cargo build' --arg isDevelopmentShell false

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v7
      - name: Build
        run: nix-build
